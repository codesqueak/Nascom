import com.github.spotbugs.SpotBugsTask

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.6"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'maven'
apply plugin: 'com.github.spotbugs'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

task setVersion {
    if (System.env.BUILD_NUMBER) {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + System.env.BUILD_NUMBER
    } else {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + projectVersionBuild
    }
}

compileJava {
    options.fork = true
    options.incremental = false
}

jar {
    manifest
            {
                attributes 'Implementation-Title': projectName,
                        'Implementation-Version': version,
                        'Main-Class': 'com.codingrodent.emulator.Emulator',
                        'Built-Date': new Date(),
                        'Built-JDK': System.getProperty('java.version')
            }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    baseName = projectName
}


task makedist {
    copy {
        from('build/libs')
                {
                    include '*.jar'
                }
        from(projectDir)
                {
                    include 'EmulatorInfo.json'
                    include 'LICENSE'
                }
        into 'dist'
    }
    copy {
        from('resources')
                {
                    include '**/*.*'
                }
        into 'dist/resources'
    }
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test
        {
            maxParallelForks = 1
            filter
                    {
                        includeTestsMatching "com.codingrodent.emulator.*"
                    }
            jacoco {
                append = false
                destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
                classDumpDir = file("$buildDir/jacoco/classpathdumps")
            }
        }

jacocoTestReport {
    reports {
        xml.setEnabled(true)
        csv.setEnabled(false)
        html.setDestination(file("${buildDir}/jacocoHtml"))
    }
}

spotbugs {
    sourceSets = [sourceSets.main]
    effort = "max"
    reportLevel = "high"
    ignoreFailures = true
}

tasks.withType(SpotBugsTask) {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

check.dependsOn jacocoTestReport
test.dependsOn javadoc
compileJava.dependsOn setVersion




dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.6.2'
    compile group: 'com.codingrodent.microprocessor', name: 'Z80Processor', version: '2.0.2'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    //
    testCompile("junit:junit:4.12")
    testCompile("org.mockito:mockito-all:2.0.2-beta")
    testCompile("org.hamcrest:hamcrest-all:1.3")
    //
    testCompile group: 'org.codehaus.mojo', name: 'findbugs-maven-plugin', version: '3.0.4'

}

wrapper {
    gradleVersion = '5.0'
}
