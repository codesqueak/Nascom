buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

plugins {
    id "com.github.spotbugs" version "5.0.10"
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.spotbugs'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}


task setVersion {
    if (System.env.BUILD_NUMBER) {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + System.env.BUILD_NUMBER
    } else {
        version = projectVersionMajor + '.' + projectVersionMinor + '.' + projectVersionBuild
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest
            {
                attributes 'Implementation-Title': projectName,
                        'Implementation-Version': version,
                        'Main-Class': 'com.codingrodent.emulator.Emulator',
                        'Built-Date': new Date(),
                        'Built-JDK': System.getProperty('java.version')
            }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    baseName = projectName
}


task makedist {
    copy {
        from('build/libs')
                {
                    include '*.jar'
                }
        from(projectDir)
                {
                    include 'EmulatorInfo.json'
                    include 'LICENSE'
                }
        into 'dist'
    }
    copy {
        from('resources')
                {
                    include '**/*.*'
                }
        into 'dist/resources'
    }
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.8"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
    useJUnitPlatform()
    maxParallelForks = 1
    filter
            {
                includeTestsMatching "com.codingrodent.emulator.*"
            }
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir("${buildDir}/jacocoHtml")
    }
}

spotbugs {
    effort = "max"
    reportLevel = "high"
    ignoreFailures = true
    toolVersion = '4.7.1'
}

spotbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

spotbugsTest {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport
test.dependsOn javadoc
compileJava.dependsOn setVersion

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.4'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.4'
    implementation group: 'com.codingrodent.microprocessor', name: 'Z80Processor', version: '4.2.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.1'
    //
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.9.1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.8.1'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
}

wrapper {
    gradleVersion = '7.5.1'
}
